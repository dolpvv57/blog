const e=JSON.parse(`{"key":"v-7e0d34f3","path":"/posts/redis.html","title":"Redis","lang":"zh-CN","frontmatter":{"title":"Redis","date":"2023-12-02T00:00:00.000Z","description":"什么是Redis Redis 是一种基于内存的数据库，对数据的读写操作都是在内存中完成，因此读写速度非常快，常用于缓存，消息队列、分布式锁等场景。Redis 提供了多种数据类型来支持不同的业务场景，并且【对数据类型的操作都是原子性】的，因为执行命令由单线程负责 Redis 具备高性能、高并发两种特性，因此使用 Redis 作为 MySQL 的缓存 注：单台设备的 Redis 的 QPS（Query Per Second，每秒钟处理完请求的次数） 是 MySQL 的 10 倍，Redis 单机的 QPS 能轻松破 10w，而 MySQL 单机的 QPS 很难破 1w","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/redis.html"}],["meta",{"property":"og:site_name","content":"Becky's"}],["meta",{"property":"og:title","content":"Redis"}],["meta",{"property":"og:description","content":"什么是Redis Redis 是一种基于内存的数据库，对数据的读写操作都是在内存中完成，因此读写速度非常快，常用于缓存，消息队列、分布式锁等场景。Redis 提供了多种数据类型来支持不同的业务场景，并且【对数据类型的操作都是原子性】的，因为执行命令由单线程负责 Redis 具备高性能、高并发两种特性，因此使用 Redis 作为 MySQL 的缓存 注：单台设备的 Redis 的 QPS（Query Per Second，每秒钟处理完请求的次数） 是 MySQL 的 10 倍，Redis 单机的 QPS 能轻松破 10w，而 MySQL 单机的 QPS 很难破 1w"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Becky"}],["meta",{"property":"article:published_time","content":"2023-12-02T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-02T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Becky\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"什么是Redis","slug":"什么是redis","link":"#什么是redis","children":[]},{"level":2,"title":"Redis实现缓存","slug":"redis实现缓存","link":"#redis实现缓存","children":[]},{"level":2,"title":"旁路缓存策略","slug":"旁路缓存策略","link":"#旁路缓存策略","children":[]},{"level":2,"title":"Redis如何实现服务高可用","slug":"redis如何实现服务高可用","link":"#redis如何实现服务高可用","children":[{"level":3,"title":"详解主从服务器的同步过程","slug":"详解主从服务器的同步过程","link":"#详解主从服务器的同步过程","children":[]},{"level":3,"title":"哨兵模式","slug":"哨兵模式","link":"#哨兵模式","children":[]}]},{"level":2,"title":"Redis集群脑裂导致数据丢失怎么办？","slug":"redis集群脑裂导致数据丢失怎么办","link":"#redis集群脑裂导致数据丢失怎么办","children":[]},{"level":2,"title":"Redis为什么这么快","slug":"redis为什么这么快","link":"#redis为什么这么快","children":[{"level":3,"title":"详解 Redis 的线程模型","slug":"详解-redis-的线程模型","link":"#详解-redis-的线程模型","children":[]}]}],"git":{},"readingTime":{"minutes":9.97,"words":2991},"filePathRelative":"posts/redis.md","localizedDate":"2023年12月2日","excerpt":"<h2> 什么是Redis</h2>\\n<p>Redis 是一种基于内存的数据库，对数据的读写操作都是在内存中完成，因此读写速度非常快，常用于缓存，消息队列、分布式锁等场景。Redis 提供了多种数据类型来支持不同的业务场景，并且【对数据类型的操作都是原子性】的，因为执行命令由单线程负责</p>\\n<p>Redis 具备高性能、高并发两种特性，因此<mark>使用 Redis 作为 MySQL 的缓存</mark></p>\\n<p>注：单台设备的 Redis 的 QPS（Query Per Second，每秒钟处理完请求的次数） 是 MySQL 的 10 倍，Redis 单机的 QPS 能轻松破 10w，而 MySQL 单机的 QPS 很难破 1w</p>","autoDesc":true}`);export{e as data};
