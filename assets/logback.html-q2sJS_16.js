const n=JSON.parse('{"key":"v-ba716dca","path":"/posts/Spring/logback.html","title":"设置日志Logback","lang":"zh-CN","frontmatter":{"description":"设置日志Logback 在没有配置文件的情况下，Logback 的日志信息会输出到控制台 配置文件在 src/main/resources 下，一般命名为 logback-spring.xml &lt;!-- configuration 有三个属性： scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 scanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒当scan为true时，此属性生效。默认的时间间隔为1分钟。 debug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 --&gt; &lt;configuration&gt; &lt;include resource=\\"org/springframework/boot/logging/logback/defaults.xml\\" /&gt; &lt;!-- 定义日志文件名称 --&gt; &lt;property name=\\"APP_NAME\\" value=\\"sping-demo\\" /&gt; &lt;!-- 定义日志文件的路径 --&gt; &lt;property name=\\"LOG_PATH\\" value=\\"D:/Project/logs/${APP_NAME}\\" /&gt; &lt;!-- 定义日志的文件名 --&gt; &lt;property name=\\"LOG_FILE\\" value=\\"${LOG_PATH}/sping-demo.log\\" /&gt; &lt;!-- 滚动记录日志，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 --&gt; &lt;appender name=\\"APPLICATION\\" class=\\"ch.qos.logback.core.rolling.RollingFileAppender\\"&gt; &lt;!-- 指定日志文件的名称 --&gt; &lt;file&gt;${LOG_FILE}&lt;/file&gt; &lt;!-- 当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名 TimeBasedRollingPolicy： 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责触发滚动。 --&gt; &lt;rollingPolicy class=\\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\\"&gt; &lt;!-- 滚动时产生的文件的存放位置及文件名称 %d{yyyy-MM-dd}：按天进行日志滚动 %i：当文件大小超过maxFileSize时，按照i进行文件滚动 --&gt; &lt;fileNamePattern&gt;${LOG_FILE}-%d{yyyy-MM-dd}-%i.log&lt;/fileNamePattern&gt; &lt;!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件。假设设置每天滚动， 且maxHistory是7，则只保存最近7天的文件，删除之前的旧文件。 注意，删除旧文件时，那些为了归档而创建的目录也会被删除。 --&gt; &lt;maxHistory&gt;30&lt;/maxHistory&gt; &lt;!-- 当日志文件超过maxFileSize指定的大小时，根据上面提到的%i进行日志文件滚动 注意此处配置SizeBasedTriggeringPolicy是无法实现按文件大小进行滚动的， 必须配置timeBasedFileNamingAndTriggeringPolicy --&gt; &lt;timeBasedFileNamingAndTriggeringPolicy class=\\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\\"&gt; &lt;maxFileSize&gt;50MB&lt;/maxFileSize&gt; &lt;/timeBasedFileNamingAndTriggeringPolicy&gt; &lt;/rollingPolicy&gt; &lt;!-- 日志输出格式： --&gt; &lt;layout class=\\"ch.qos.logback.classic.PatternLayout\\"&gt; &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [ %thread ] - [ %-5level ] [ %logger{50} : %line ] - %msg%n&lt;/pattern&gt; &lt;/layout&gt; &lt;/appender&gt; &lt;!-- ch.qos.logback.core.ConsoleAppender 表示控制台输出 --&gt; &lt;appender name=\\"CONSOLE\\" class=\\"ch.qos.logback.core.ConsoleAppender\\"&gt; &lt;!-- 日志输出格式： %d表示日期时间，%green 绿色 %thread表示线程名，%magenta 洋红色 %-5level：级别从左显示5个字符宽度 %highlight 高亮色 %logger{36} 表示logger名字最长36个字符，否则按照句点分割 %yellow 黄色 %msg：日志消息 %n是换行符 --&gt; &lt;layout class=\\"ch.qos.logback.classic.PatternLayout\\"&gt; &lt;pattern&gt;%green(%d{yyyy-MM-dd HH:mm:ss.SSS}) [%magenta(%thread)] %highlight(%-5level) %yellow(%logger{36}): %msg%n&lt;/pattern&gt; &lt;/layout&gt; &lt;/appender&gt; &lt;!-- root与logger是父子关系，没有特别定义则默认为root，任何一个类只会和一个logger对应， 要么是定义的logger，要么是root，判断的关键在于找到这个logger，然后判断这个logger的appender和level。 --&gt; &lt;root level=\\"info\\"&gt; &lt;appender-ref ref=\\"CONSOLE\\" /&gt; &lt;appender-ref ref=\\"APPLICATION\\" /&gt; &lt;/root&gt; &lt;/configuration&gt;","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/Spring/logback.html"}],["meta",{"property":"og:site_name","content":"Becky\'s"}],["meta",{"property":"og:title","content":"设置日志Logback"}],["meta",{"property":"og:description","content":"设置日志Logback 在没有配置文件的情况下，Logback 的日志信息会输出到控制台 配置文件在 src/main/resources 下，一般命名为 logback-spring.xml &lt;!-- configuration 有三个属性： scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 scanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒当scan为true时，此属性生效。默认的时间间隔为1分钟。 debug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 --&gt; &lt;configuration&gt; &lt;include resource=\\"org/springframework/boot/logging/logback/defaults.xml\\" /&gt; &lt;!-- 定义日志文件名称 --&gt; &lt;property name=\\"APP_NAME\\" value=\\"sping-demo\\" /&gt; &lt;!-- 定义日志文件的路径 --&gt; &lt;property name=\\"LOG_PATH\\" value=\\"D:/Project/logs/${APP_NAME}\\" /&gt; &lt;!-- 定义日志的文件名 --&gt; &lt;property name=\\"LOG_FILE\\" value=\\"${LOG_PATH}/sping-demo.log\\" /&gt; &lt;!-- 滚动记录日志，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 --&gt; &lt;appender name=\\"APPLICATION\\" class=\\"ch.qos.logback.core.rolling.RollingFileAppender\\"&gt; &lt;!-- 指定日志文件的名称 --&gt; &lt;file&gt;${LOG_FILE}&lt;/file&gt; &lt;!-- 当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名 TimeBasedRollingPolicy： 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责触发滚动。 --&gt; &lt;rollingPolicy class=\\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\\"&gt; &lt;!-- 滚动时产生的文件的存放位置及文件名称 %d{yyyy-MM-dd}：按天进行日志滚动 %i：当文件大小超过maxFileSize时，按照i进行文件滚动 --&gt; &lt;fileNamePattern&gt;${LOG_FILE}-%d{yyyy-MM-dd}-%i.log&lt;/fileNamePattern&gt; &lt;!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件。假设设置每天滚动， 且maxHistory是7，则只保存最近7天的文件，删除之前的旧文件。 注意，删除旧文件时，那些为了归档而创建的目录也会被删除。 --&gt; &lt;maxHistory&gt;30&lt;/maxHistory&gt; &lt;!-- 当日志文件超过maxFileSize指定的大小时，根据上面提到的%i进行日志文件滚动 注意此处配置SizeBasedTriggeringPolicy是无法实现按文件大小进行滚动的， 必须配置timeBasedFileNamingAndTriggeringPolicy --&gt; &lt;timeBasedFileNamingAndTriggeringPolicy class=\\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\\"&gt; &lt;maxFileSize&gt;50MB&lt;/maxFileSize&gt; &lt;/timeBasedFileNamingAndTriggeringPolicy&gt; &lt;/rollingPolicy&gt; &lt;!-- 日志输出格式： --&gt; &lt;layout class=\\"ch.qos.logback.classic.PatternLayout\\"&gt; &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [ %thread ] - [ %-5level ] [ %logger{50} : %line ] - %msg%n&lt;/pattern&gt; &lt;/layout&gt; &lt;/appender&gt; &lt;!-- ch.qos.logback.core.ConsoleAppender 表示控制台输出 --&gt; &lt;appender name=\\"CONSOLE\\" class=\\"ch.qos.logback.core.ConsoleAppender\\"&gt; &lt;!-- 日志输出格式： %d表示日期时间，%green 绿色 %thread表示线程名，%magenta 洋红色 %-5level：级别从左显示5个字符宽度 %highlight 高亮色 %logger{36} 表示logger名字最长36个字符，否则按照句点分割 %yellow 黄色 %msg：日志消息 %n是换行符 --&gt; &lt;layout class=\\"ch.qos.logback.classic.PatternLayout\\"&gt; &lt;pattern&gt;%green(%d{yyyy-MM-dd HH:mm:ss.SSS}) [%magenta(%thread)] %highlight(%-5level) %yellow(%logger{36}): %msg%n&lt;/pattern&gt; &lt;/layout&gt; &lt;/appender&gt; &lt;!-- root与logger是父子关系，没有特别定义则默认为root，任何一个类只会和一个logger对应， 要么是定义的logger，要么是root，判断的关键在于找到这个logger，然后判断这个logger的appender和level。 --&gt; &lt;root level=\\"info\\"&gt; &lt;appender-ref ref=\\"CONSOLE\\" /&gt; &lt;appender-ref ref=\\"APPLICATION\\" /&gt; &lt;/root&gt; &lt;/configuration&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Becky"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设置日志Logback\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Becky\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":2.74,"words":821},"filePathRelative":"posts/Spring/logback.md","excerpt":"<h1> 设置日志Logback</h1>\\n<p>在没有配置文件的情况下，Logback 的日志信息会输出到控制台\\n配置文件在 src/main/resources 下，一般命名为 <code>logback-spring.xml</code></p>\\n<div class=\\"language-xml line-numbers-mode\\" data-ext=\\"xml\\"><pre class=\\"language-xml\\"><code><span class=\\"token comment\\">&lt;!--\\nconfiguration 有三个属性：\\nscan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。\\nscanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒当scan为true时，此属性生效。默认的时间间隔为1分钟。\\ndebug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。\\n--&gt;</span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>configuration</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>include</span> <span class=\\"token attr-name\\">resource</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>org/springframework/boot/logging/logback/defaults.xml<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n    <span class=\\"token comment\\">&lt;!-- 定义日志文件名称 --&gt;</span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>property</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>APP_NAME<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">value</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>sping-demo<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n    <span class=\\"token comment\\">&lt;!-- 定义日志文件的路径 --&gt;</span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>property</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>LOG_PATH<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">value</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>D:/Project/logs/${APP_NAME}<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n    <span class=\\"token comment\\">&lt;!-- 定义日志的文件名 --&gt;</span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>property</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>LOG_FILE<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">value</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>${LOG_PATH}/sping-demo.log<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n\\n    <span class=\\"token comment\\">&lt;!-- 滚动记录日志，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 --&gt;</span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>appender</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>APPLICATION<span class=\\"token punctuation\\">\\"</span></span>\\n              <span class=\\"token attr-name\\">class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>ch.qos.logback.core.rolling.RollingFileAppender<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token comment\\">&lt;!-- 指定日志文件的名称 --&gt;</span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>file</span><span class=\\"token punctuation\\">&gt;</span></span>${LOG_FILE}<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>file</span><span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token comment\\">&lt;!--\\n          当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名\\n          TimeBasedRollingPolicy： 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责触发滚动。\\n          --&gt;</span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>rollingPolicy</span> <span class=\\"token attr-name\\">class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n            <span class=\\"token comment\\">&lt;!--\\n           滚动时产生的文件的存放位置及文件名称\\n           %d{yyyy-MM-dd}：按天进行日志滚动\\n           %i：当文件大小超过maxFileSize时，按照i进行文件滚动\\n           --&gt;</span>\\n            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>fileNamePattern</span><span class=\\"token punctuation\\">&gt;</span></span>${LOG_FILE}-%d{yyyy-MM-dd}-%i.log<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>fileNamePattern</span><span class=\\"token punctuation\\">&gt;</span></span>\\n            <span class=\\"token comment\\">&lt;!--\\n           可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件。假设设置每天滚动，\\n           且maxHistory是7，则只保存最近7天的文件，删除之前的旧文件。\\n           注意，删除旧文件时，那些为了归档而创建的目录也会被删除。\\n           --&gt;</span>\\n            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>maxHistory</span><span class=\\"token punctuation\\">&gt;</span></span>30<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>maxHistory</span><span class=\\"token punctuation\\">&gt;</span></span>\\n            <span class=\\"token comment\\">&lt;!--\\n           当日志文件超过maxFileSize指定的大小时，根据上面提到的%i进行日志文件滚动\\n           注意此处配置SizeBasedTriggeringPolicy是无法实现按文件大小进行滚动的，\\n           必须配置timeBasedFileNamingAndTriggeringPolicy\\n           --&gt;</span>\\n            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>timeBasedFileNamingAndTriggeringPolicy</span> <span class=\\"token attr-name\\">class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n                <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>maxFileSize</span><span class=\\"token punctuation\\">&gt;</span></span>50MB<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>maxFileSize</span><span class=\\"token punctuation\\">&gt;</span></span>\\n            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>timeBasedFileNamingAndTriggeringPolicy</span><span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>rollingPolicy</span><span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token comment\\">&lt;!-- 日志输出格式： --&gt;</span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>layout</span> <span class=\\"token attr-name\\">class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>ch.qos.logback.classic.PatternLayout<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>pattern</span><span class=\\"token punctuation\\">&gt;</span></span>%d{yyyy-MM-dd HH:mm:ss.SSS} [ %thread ] - [ %-5level ] [ %logger{50} : %line ] - %msg%n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>pattern</span><span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>layout</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>appender</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token comment\\">&lt;!-- ch.qos.logback.core.ConsoleAppender 表示控制台输出 --&gt;</span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>appender</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>CONSOLE<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>ch.qos.logback.core.ConsoleAppender<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token comment\\">&lt;!--\\n       日志输出格式：\\n           %d表示日期时间，%green 绿色\\n           %thread表示线程名，%magenta 洋红色\\n           %-5level：级别从左显示5个字符宽度 %highlight 高亮色\\n           %logger{36} 表示logger名字最长36个字符，否则按照句点分割 %yellow 黄色\\n           %msg：日志消息\\n           %n是换行符\\n       --&gt;</span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>layout</span> <span class=\\"token attr-name\\">class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>ch.qos.logback.classic.PatternLayout<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>pattern</span><span class=\\"token punctuation\\">&gt;</span></span>%green(%d{yyyy-MM-dd HH:mm:ss.SSS}) [%magenta(%thread)] %highlight(%-5level) %yellow(%logger{36}): %msg%n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>pattern</span><span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>layout</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>appender</span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\n    <span class=\\"token comment\\">&lt;!--\\n   root与logger是父子关系，没有特别定义则默认为root，任何一个类只会和一个logger对应，\\n   要么是定义的logger，要么是root，判断的关键在于找到这个logger，然后判断这个logger的appender和level。\\n   --&gt;</span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>root</span> <span class=\\"token attr-name\\">level</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>info<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>appender-ref</span> <span class=\\"token attr-name\\">ref</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>CONSOLE<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>appender-ref</span> <span class=\\"token attr-name\\">ref</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>APPLICATION<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>root</span><span class=\\"token punctuation\\">&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>configuration</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
