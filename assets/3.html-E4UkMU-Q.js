import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as n,d as s}from"./app-CONuJI3o.js";const t={},o=s(`<h1 id="_3-操作符" tabindex="-1"><a class="header-anchor" href="#_3-操作符" aria-hidden="true">#</a> 3 操作符</h1><h2 id="_3-4-赋值" tabindex="-1"><a class="header-anchor" href="#_3-4-赋值" aria-hidden="true">#</a> 3.4 赋值</h2><p>基本类型的变量存储来实际的数值，而不是指向一个对象的引用；非基本类型的变量是指向某个对象的引用，注意区分：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> a <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>9个基本类型包括：boolean(大小没有明确指定)，byte(1字节)，short(2字节)，char(2字节)，int(4字节)，float(4字节)，long(8字节)，double(8字节)，void(大小没有明确指定)</p><p>对基本类型赋值：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>a <span class="token operator">=</span> b<span class="token punctuation">;</span> <span class="token comment">//b的值直接复制给了a, 后续对a的改变不会影响b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>对对象赋值：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>a <span class="token operator">=</span> b<span class="token punctuation">;</span> <span class="token comment">//b的引用复制给了a, a和b指向同一个对象, 后续对a的改变也会影响b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-5-关系操作符" tabindex="-1"><a class="header-anchor" href="#_3-5-关系操作符" aria-hidden="true">#</a> 3.5 关系操作符</h2><p>==，!= 默认比较的是对象的引用是不是同一个（或者说，看两个引用是不是指的同一个对象）自定义的类如果不重写<code>.equals()</code>方法，默认比较的也是对象的引用</p>`,11),c=[o];function d(i,r){return e(),n("div",null,c)}const u=a(t,[["render",d],["__file","3.html.vue"]]);export{u as default};
