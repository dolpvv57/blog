const e=JSON.parse(`{"key":"v-0596d54b","path":"/posts/Java/summary.html","title":"总结","lang":"zh-CN","frontmatter":{"description":"总结 关键字总结 访问控制：protected, public, private 访问控制权限有4种，除了public，private，protected，还有default，在不添加访问控制修饰符的时候就是使用默认的default权限（但如果写了default这个词在前面就会报错） 类、方法和变量相关的关键字：abstract, class, extends, final, implements, interface, native, new, static, strictfp, synchronized, transient, volatile, enum","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/Java/summary.html"}],["meta",{"property":"og:site_name","content":"Becky's"}],["meta",{"property":"og:title","content":"总结"}],["meta",{"property":"og:description","content":"总结 关键字总结 访问控制：protected, public, private 访问控制权限有4种，除了public，private，protected，还有default，在不添加访问控制修饰符的时候就是使用默认的default权限（但如果写了default这个词在前面就会报错） 类、方法和变量相关的关键字：abstract, class, extends, final, implements, interface, native, new, static, strictfp, synchronized, transient, volatile, enum"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Becky"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"总结\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Becky\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"关键字总结","slug":"关键字总结","link":"#关键字总结","children":[]}],"git":{},"readingTime":{"minutes":1.31,"words":393},"filePathRelative":"posts/Java/summary.md","excerpt":"<h1> 总结</h1>\\n<h2> 关键字总结</h2>\\n<ul>\\n<li>访问控制：<code>protected</code>, <code>public</code>, <code>private</code></li>\\n</ul>\\n<blockquote>\\n<p>访问控制权限有4种，除了public，private，protected，还有default，在不添加访问控制修饰符的时候就是使用默认的default权限（但如果写了<code>default</code>这个词在前面就会报错）</p>\\n</blockquote>\\n<ul>\\n<li>类、方法和变量相关的关键字：<code>abstract</code>, <code>class</code>, <code>extends</code>, <code>final</code>, <code>implements</code>, <code>interface</code>, <code>native</code>, <code>new</code>, <code>static</code>, <code>strictfp</code>, <code>synchronized</code>, <code>transient</code>, <code>volatile</code>, <code>enum</code></li>\\n</ul>","autoDesc":true}`);export{e as data};
